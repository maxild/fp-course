:set -isrc
:set -package time
:set -package containers
:l src/Course.hs src/Test/Loader.hs
:m + Test.Loader
:set prompt "\ESC[38;5;208m\STXλ>\ESC[m\STX "
:set -Wall
:set -fno-warn-unused-binds
:set -fno-warn-unused-do-bind
:set -fno-warn-unused-imports
:set -fno-warn-type-defaults
:set -XNoImplicitPrelude
:set -XScopedTypeVariables
-- OverloadedStrings =>
--  1. The extension adds an IsString class and changes string literals to have type IsString a ⇒ a.
--  2. The IsString class has a single method, fromString :: String → a, which is analogous to the
--     fromInteger :: Integer → a method of Num that underlies integral literal overloading.
:set -XOverloadedStrings
:set -XRebindableSyntax
:def test (\arg -> Prelude.return Prelude.$ Prelude.unlines [":reload", "test " Prelude.++ arg])
:def hlint Prelude.const . Prelude.return $ ":! hlint \"src\""
:def hoogle (\s -> Prelude.return $ ":! hoogle --count=15 \"" Prelude.++ s Prelude.++ "\"")
:def pointfree (\s -> Prelude.return $ ":! pointfree \"" Prelude.++ s Prelude.++ "\"")
:def pointful (\s -> Prelude.return $ ":! pointful \"" Prelude.++ s Prelude.++ "\"")
